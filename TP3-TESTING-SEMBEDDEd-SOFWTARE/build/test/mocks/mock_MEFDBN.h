/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_MEFDBN_H
#define _MOCK_MEFDBN_H

#include "MEFDBN.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_MEFDBN_Init(void);
void mock_MEFDBN_Destroy(void);
void mock_MEFDBN_Verify(void);




#define buttonreleased_Ignore() buttonreleased_CMockIgnore()
void buttonreleased_CMockIgnore(void);
#define buttonreleased_Expect(cmock_arg1) buttonreleased_CMockExpect(__LINE__, cmock_arg1)
void buttonreleased_CMockExpect(UNITY_LINE_TYPE cmock_line, gpioMap_t cmock_arg1);
typedef void (* CMOCK_buttonreleased_CALLBACK)(gpioMap_t cmock_arg1, int cmock_num_calls);
void buttonreleased_StubWithCallback(CMOCK_buttonreleased_CALLBACK Callback);
#define buttonpressed_Ignore() buttonpressed_CMockIgnore()
void buttonpressed_CMockIgnore(void);
#define buttonpressed_Expect(cmock_arg1) buttonpressed_CMockExpect(__LINE__, cmock_arg1)
void buttonpressed_CMockExpect(UNITY_LINE_TYPE cmock_line, gpioMap_t cmock_arg1);
typedef void (* CMOCK_buttonpressed_CALLBACK)(gpioMap_t cmock_arg1, int cmock_num_calls);
void buttonpressed_StubWithCallback(CMOCK_buttonpressed_CALLBACK Callback);
#define fsmDbnInit_Ignore() fsmDbnInit_CMockIgnore()
void fsmDbnInit_CMockIgnore(void);
#define fsmDbnInit_Expect(cmock_arg1, cmock_arg2) fsmDbnInit_CMockExpect(__LINE__, cmock_arg1, cmock_arg2)
void fsmDbnInit_CMockExpect(UNITY_LINE_TYPE cmock_line, Dbndata_t* cmock_arg1, gpioMap_t cmock_arg2);
typedef void (* CMOCK_fsmDbnInit_CALLBACK)(Dbndata_t* cmock_arg1, gpioMap_t cmock_arg2, int cmock_num_calls);
void fsmDbnInit_StubWithCallback(CMOCK_fsmDbnInit_CALLBACK Callback);
#define fsmDbnUpdate_Ignore() fsmDbnUpdate_CMockIgnore()
void fsmDbnUpdate_CMockIgnore(void);
#define fsmDbnUpdate_Expect(cmock_arg1) fsmDbnUpdate_CMockExpect(__LINE__, cmock_arg1)
void fsmDbnUpdate_CMockExpect(UNITY_LINE_TYPE cmock_line, Dbndata_t* cmock_arg1);
typedef void (* CMOCK_fsmDbnUpdate_CALLBACK)(Dbndata_t* cmock_arg1, int cmock_num_calls);
void fsmDbnUpdate_StubWithCallback(CMOCK_fsmDbnUpdate_CALLBACK Callback);
#define getkeystate_IgnoreAndReturn(cmock_retval) getkeystate_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void getkeystate_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, bool_t cmock_to_return);
#define getkeystate_ExpectAndReturn(key, cmock_retval) getkeystate_CMockExpectAndReturn(__LINE__, key, cmock_retval)
void getkeystate_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, gpioMap_t key, bool_t cmock_to_return);
typedef bool_t (* CMOCK_getkeystate_CALLBACK)(gpioMap_t key, int cmock_num_calls);
void getkeystate_StubWithCallback(CMOCK_getkeystate_CALLBACK Callback);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
